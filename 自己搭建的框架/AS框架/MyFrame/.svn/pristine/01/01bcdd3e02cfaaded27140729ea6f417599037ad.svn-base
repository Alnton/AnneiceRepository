package com.alnton.myframe.ui.pay;

import android.app.Dialog;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;

import com.alipay.sdk.app.PayTask;
import com.alnton.myframe.R;
import com.alnton.myframe.application.CacheSession;
import com.alnton.myframe.application.Session;
import com.alnton.myframe.config.Config.URLConfig;
import com.alnton.myframe.entity.pay.PayInfo;
import com.alnton.myframe.entity.pay.PayType;
import com.alnton.myframe.entity.user.User;
import com.alnton.myframe.ui.BaseActivity;
import com.alnton.myframe.ui.pay.alipay.AlipayUtil;
import com.alnton.myframe.ui.pay.alipay.Keys;
import com.alnton.myframe.ui.pay.alipay.PayResult;
import com.alnton.myframe.util.MyframeTools;
import com.alnton.myframe.wxapi.WXConstants;
import com.alnton.myframecore.okhttp.OKHttpUtil;
import com.alnton.myframecore.okhttp.callback.ResponseEntity;
import com.alnton.myframecore.okhttp.callback.ResultCallback;
import com.alnton.myframecore.okhttp.request.RequestParams;
import com.alnton.myframecore.view.Button.ClickEffectButton;
import com.alnton.myframecore.view.Marquee.MarqueeText;
import com.alnton.myframecore.view.util.ToastUtil;
import com.tencent.mm.sdk.constants.Build;
import com.tencent.mm.sdk.modelpay.PayReq;
import com.unionpay.UPPayAssistEx;

import java.util.ArrayList;
import java.util.Map;

/**
 * <支付方式选择界面>
 *
 * @author 王乾州
 */
public class ChoicePayTypeActivity extends BaseActivity implements OnClickListener {
    /**
     * 支付请求
     */
    private static final int RQF_PAY = 1;

    /**
     * 标题
     */
    private MarqueeText titleTextView;

    /**
     * 返回按钮
     */
    private ClickEffectButton backButton;

    /**
     * 确认支付按钮
     */
    private LinearLayout submitLayout;

    /**
     * 支付宝支付区域, 微信支付区域,银联支付区域
     */
    private RelativeLayout alipayLayout, wxLayout, yinlianLayout;

    /**
     * 支付宝支付选中图片, 微信支付选中图片,银联支付选中图片
     */
    private ImageView alipayImageView, wxImageView, yinlianImageView;

    /**
     * 订单编号
     */
    private String orderCode;

    /**
     * 哪种支付的标志(0:支付宝  1:微信 2:银联)
     */
    private int flag = 2;

    Handler mHandler = new Handler() {
        public void handleMessage(android.os.Message msg) {
            switch (msg.what) {
                case RQF_PAY:
                    /**
                     * 支付宝支付回调
                     */
                    PayResult payResult = new PayResult((Map<String, String>) msg.obj);
                    /**
                     对于支付结果，请商户依赖服务端的异步通知结果。同步通知结果，仅作为支付结束的通知。
                     */
                    String resultStatus = payResult.getResultStatus();
                    // 判断resultStatus 为9000则代表支付成功
                    if (TextUtils.equals(resultStatus, "9000")) {
                        // 该笔订单是否真实支付成功，需要依赖服务端的异步通知。
                        Bundle bundle = new Bundle();
                        bundle.putString("orderCode", orderCode);
//                        MyFrameCoreTools.getInstance().startActivity(mContext, PaySuccessActivity.class, bundle);
                        finish();
                    } else {
                        // 该笔订单真实的支付结果，需要依赖服务端的异步通知。
                        ToastUtil.instance.showToast(mContext, "支付失败");
                    }
                    break;
                default:
                    break;
            }
        }

        ;
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_checkstand);

        /**
         * 获取上个界面传的值
         */
        getBundler();

        /**
         * 初始化View
         */
        initView();

        /**
         * 设置事件监听
         */
        setListener();

        /**
         * 查询数据字典，获取是否有微信支付
         */
        getPayType();
    }

    private void getBundler() {
        Bundle bundle = getIntent().getExtras();
        if (null != bundle) {
            orderCode = bundle.getString("orderCode");
        }
    }

    private void initView() {
        backButton = (ClickEffectButton) findViewById(R.id.backButton);

        titleTextView = (MarqueeText) findViewById(R.id.titleTextView);
        titleTextView.setText(R.string.checkstand);

        alipayImageView = (ImageView) findViewById(R.id.alipayImageView);
        wxImageView = (ImageView) findViewById(R.id.wxImageView);
        yinlianImageView = (ImageView) findViewById(R.id.yinlianImageView);

        alipayLayout = (RelativeLayout) findViewById(R.id.alipayLayout);
        wxLayout = (RelativeLayout) findViewById(R.id.wxLayout);
        yinlianLayout = (RelativeLayout) findViewById(R.id.yinlianLayout);

        submitLayout = (LinearLayout) findViewById(R.id.submitLayout);
    }

    private void setListener() {
        backButton.setOnClickListener(this);

        alipayLayout.setOnClickListener(this);
        wxLayout.setOnClickListener(this);
        yinlianLayout.setOnClickListener(this);
        submitLayout.setOnClickListener(this);
    }

    /**
     * 查询数据字典，获取是否有微信支付
     */
    private void getPayType() {
        RequestParams params = new RequestParams();
        params.put("supCateKey", "pay_type");

        ResultCallback<ResponseEntity<ArrayList<PayType>>> resultCallback = new ResultCallback<ResponseEntity<ArrayList<PayType>>>() {

            @Override
            public void onResponse(ResponseEntity<ArrayList<PayType>> response) {
                ArrayList<PayType> list = response.getMsg();
                if (null != list && list.size() > 0) {
                    for (PayType type : list) {
                        if (null != type && "wechat".equals(type.getCategoryKey())) {
                            wxLayout.setVisibility(View.VISIBLE);
                        } else if (null != type && "alipay".equals(type.getCategoryKey())) {
                            alipayLayout.setVisibility(View.VISIBLE);
                        }
                    }
                }
            }
        };

        resultCallback.setShowProgressDialog(true);
        resultCallback.setShowToast(false);
        resultCallback.setOnErrorShowToast(false);

        OKHttpUtil.instance.onPostParams(URLConfig.PAYTYPE_URL, params, resultCallback);
    }

    /**
     * 查询各个支付交易流水号，然后进行支付
     */
    private void pay() {
        String url = "";
        switch (flag) {
            case 0:
                /**
                 * 支付宝
                 */
                url = URLConfig.ALIPAY_URL;
                break;

            case 1:
                /**
                 * 微信
                 */
                url = URLConfig.WXPAY_URL;

                boolean isPaySupported =
                        Session.getInstance().wxAPI.getWXAppSupportAPI() >= Build.PAY_SUPPORTED_SDK_INT;
                if (!isPaySupported) {
                    ToastUtil.instance.showToast(mContext, R.string.isPaySupported);
                    return;
                }
                break;

            case 2:
                /**
                 * 银联
                 */
                url = URLConfig.YINLIANPAY_URL;
                break;

            default:
                ToastUtil.instance.showToast(mContext, R.string.choicePay);
                return;
        }

        RequestParams params = new RequestParams();
        params.put("orderCode", orderCode);
        params.put("userKey", User.instance.getLoginKey());
        params.put("payType", "1");

        OKHttpUtil.instance.onPostParams(url, params, new ResultCallback<PayInfo>() {
            @Override
            public void onResponse(final PayInfo info) {
                if ("0".equals(info.getTip()) || "".equals(info.getTip())) {
                    switch (flag) {
                        case 0:
                            /**
                             * 支付宝
                             */
                            /**
                             * 这里只是为了方便直接向商户展示支付宝的整个支付流程；所以Demo中加签过程直接放在客户端完成；
                             * 真实App里，privateKey等数据严禁放在客户端，加签过程务必要放在服务端完成；
                             * 防止商户私密数据泄露，造成不必要的资金损失，及面临各种安全风险；
                             *
                             * orderInfo的获取必须来自服务端；
                             */
                            Map<String, String> params =
                                    AlipayUtil.getInstance().buildOrderParamMap(Keys.APP_ID,
                                            info.getPayOrderCode(),
                                            info.getTotalMoney(),
                                            info.getGoodsName(),
                                            info.getGoodsName(),
                                            info.getSendTime());
                            String orderParam = AlipayUtil.getInstance().buildOrderParam(params);
                            String sign = AlipayUtil.getInstance().getSign(params, Keys.PRIVATE_KEY);
                            final String orderInfo = orderParam + "&" + sign;

                            Runnable payRunnable = new Runnable() {
                                @Override
                                public void run() {
                                    PayTask alipay = new PayTask(ChoicePayTypeActivity.this);
                                    Map<String, String> result = alipay.payV2(orderInfo, true);

                                    Message msg = new Message();
                                    msg.what = RQF_PAY;
                                    msg.obj = result;
                                    mHandler.sendMessage(msg);
                                }
                            };

                            Thread payThread = new Thread(payRunnable);
                            payThread.start();
                            break;

                        case 1:
                            /**
                             * 微信
                             */
                            CacheSession.getInstance().orderCode = orderCode;

                            PayReq req = new PayReq();
                            req.appId = WXConstants.APP_ID;
                            req.partnerId = WXConstants.PARTNER_ID;
                            req.prepayId = info.getSerialNumber();
                            req.nonceStr = info.getWechatNoncestr();
                            req.timeStamp = info.getWechatTimestamp();
                            req.packageValue = "Sign=WXPay";
                            req.sign = info.getWechatSign();

                            // 在支付之前，如果应用没有注册到微信，应该先调用IWXMsg.registerApp将应用注册到微信
                            Session.getInstance().wxAPI.sendReq(req);
                            finish();
                            break;

                        case 2:
                            /**
                             * 银联
                             */
                            UPPayAssistEx.startPay(mContext,
                                    null,
                                    null,
                                    info.getSerialNumber(),
                                    Session.getInstance().serverMode);
                            break;
                    }

                } else if ("1".equals(info.getTip())) {
                    MyframeTools.getInstance().showDialogCenterOneBtn(mContext, "亲，该订单已经关闭！");
                } else if ("2".equals(info.getTip())) {
                    MyframeTools.getInstance().showDialogCenterOneBtn(mContext, "亲，该订单已经支付！");
                } else if ("3".equals(info.getTip())) {
                    MyframeTools.getInstance().showDialogCenterOneBtn(mContext, "亲，支付过于频繁请稍后再试！");
                } else {
                    MyframeTools.getInstance().showDialogCenterOneBtn(mContext, "亲，服务器出异常请稍后再试！");
                }
            }
        });
    }

    /**
     * 银联支付反馈的结果
     * 商户订单是否成功支付应该以商户后台收到全渠道返回的支付结果为准，此处支付控件返回的结果仅作为参考
     */
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (data == null) {
            return;
        }
        String str = data.getExtras().getString("pay_result");
        if (str.equalsIgnoreCase("success")) {
            // 跳转到支付成功界面
            Bundle bundle = new Bundle();
            bundle.putString("orderCode", orderCode);
            //        MyFrameResourceTools.getInstance().startActivity(mContext, PaySuccessActivity.class, bundle);
            finish();
        } else if (str.equalsIgnoreCase("fail")) {
            MyframeTools.getInstance().showDialogCenterOneBtn(mContext, "支付失败！");
        } else if (str.equalsIgnoreCase("cancel")) {
            MyframeTools.getInstance().showDialogCenterOneBtn(mContext, "你已取消了本次订单的支付！");
        }
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.backButton:
                /**
                 * 放弃支付
                 */
                giveUpPay();
                break;

            case R.id.alipayLayout:
                /**
                 * 支付宝支付
                 */
                if (0 == flag) {
                    alipayImageView.setImageResource(R.mipmap.uncheck);
                    flag = -1;
                } else {
                    wxImageView.setImageResource(R.mipmap.uncheck);
                    yinlianImageView.setImageResource(R.mipmap.uncheck);

                    alipayImageView.setImageResource(R.mipmap.check);
                    flag = 0;
                }
                break;

            case R.id.wxLayout:
                /**
                 * 微信支付
                 */
                if (1 == flag) {
                    wxImageView.setImageResource(R.mipmap.uncheck);
                    flag = -1;
                } else {
                    alipayImageView.setImageResource(R.mipmap.uncheck);
                    yinlianImageView.setImageResource(R.mipmap.uncheck);

                    wxImageView.setImageResource(R.mipmap.check);
                    flag = 1;
                }
                break;

            case R.id.yinlianLayout:
                /**
                 * 银联支付
                 */
                if (2 == flag) {
                    yinlianImageView.setImageResource(R.mipmap.uncheck);
                    flag = -1;
                } else {
                    alipayImageView.setImageResource(R.mipmap.uncheck);
                    wxImageView.setImageResource(R.mipmap.uncheck);

                    yinlianImageView.setImageResource(R.mipmap.check);
                    flag = 2;
                }
                break;

            case R.id.submitLayout:
                /**
                 * 确认支付
                 */
                pay();
                break;

            default:
                break;
        }
    }

    /**
     * 放弃支付
     */
    private void giveUpPay() {
        MyframeTools.getInstance().showDialogCenterTwoBtn(mContext, "是否放弃本次支付?", new MyframeTools.OnAffirmClickListener() {
            @Override
            public void onClick(View v, Dialog dialog) {
                dialog.dismiss();
                finish();
            }
        });
    }

    @Override
    public void onBackPressed() {
        setResult(RESULT_OK);
        /**
         * 放弃支付
         */
        giveUpPay();
    }
}