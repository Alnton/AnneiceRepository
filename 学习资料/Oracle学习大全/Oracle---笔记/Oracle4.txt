
Ctrl+c:强制终止

SQL> create table friend_wang
  2  (
  3  id number ,
  4  name varchar2(30) not null ,
  5  phone varchar2(50) constraint friend_wang_phone_nn not null,
  6  email varchar2(50) ,
  7  constraint friend_wang_id_pk primary key(id)
  8  );

Table created.

SQL> commit ;

Commit complete.


SQL> describe friend_wang ;
 Name                                      Null?    Type
 ----------------------------------------- -------- ---------------------------
 ID                                        NOT NULL NUMBER
 NAME                                      NOT NULL VARCHAR2(30)
 PHONE                                     NOT NULL VARCHAR2(50)
 EMAIL                                              VARCHAR2(50)

SQL> insert into friend_wang
  2  (id , name)
  3  values (01 , 'avc') ;
insert into friend_wang
*
ERROR at line 1:
ORA-01400: cannot insert NULL into ("TEST"."FRIEND_WANG"."PHONE")

“- -”为注释
- -追加非空约束,这个比较特别和其他四种约束追加的方式都不同，其他四种都相同！
                追加非空约束就是用modify修改某个属性 的 全部特性。 modify email varchar2(60) not null
SQL> alter table friend_wang
  2  modify email varchar2(60) not null ;

Table altered.

SQL> desc friend_wang ;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 ID                                        NOT NULL NUMBER
 NAME                                      NOT NULL VARCHAR2(30)
 PHONE                                     NOT NULL VARCHAR2(50)
 EMAIL                                     NOT NULL VARCHAR2(60)


****************************查看约束类型和名称
                             user_constraints:数据字典是数据库的数据 只能查看不能修改
SQL> select constraint_name , constraint_type
  2  from user_constraints         
  3  where table_name like 'FRIEND_WANG' ;

CONSTRAINT_NAME                C
------------------------------ -
SYS_C0015333                   C
FRIEND_WANG_PHONE_NN           C
FRIEND_WANG_ID_PK              P
SYS_C0015354                   C



******************************查看用户表的名称  from user_tables
SQL> select table_name from user_tables
  2  where table_name like 'FRIEND%' ;

TABLE_NAME
------------------------------
FRIENDL
FRIEND_04
FRIEND_P2
FRIEND_S
FRIEND_W
FRIEND_WANG


*********外键列允许为空
SQL> insert into friend_t_wang(id ,name , typeId)
  2  values ( 03 , 'Ben' , null) ;

1 row created.

SQL> commit ;

Commit complete.

SQL> select * from friend_t_wang ;

        ID NAME                     TYPEID
---------- -------------------- ----------
         1 peter                      1001
         2 4008-4008                  1002
         3 Ben





*********************************************************
SQL> insert into friend_t_wang ( id , name , typeId)
  2  values ( 04 , 'zhou' , 1003) ;
insert into friend_t_wang ( id , name , typeId)
*
ERROR at line 1:
ORA-02291: integrity constraint (TEST.FRIEND_T_TYPE_TYPEID_FK) violated -
parent key not found



SQL> create table friend_t_wang
  2  ( id  number ,
  3  name varchar2(20) ,
  4  typeId number ,
  5  constraint friend_t_wang_id_pk primary key(id),
  6  constraint friend_t_wang_id_fk foreign key(typeId) references friend_type_wang (id)
  7  ) ;


SQL> insert into friend_t_wang(id , name , typeId)
  2  values ( 02 , '4008-4008' , 1002) ;

1 row created.

SQL> commit ;

Commit complete.

**********************试图删除某个表如果这个表的某个字段被参照 则报错：ORA-02292: integrity constraint (TEST.FRIEND_T_TYPE_TYPEID_FK) violated - child
record found



SQL> delete from friend_type_wang
  2  where id = 1001 ;
delete from friend_type_wang
*
ERROR at line 1:
ORA-02292: integrity constraint (TEST.FRIEND_T_TYPE_TYPEID_FK) violated - child
record found


***********课后了解
on delete cascade
on delete set null


***************唯一键上任意一列的取值允许为空

SQL> create table member_wang
  2  (
  3  id number ,
  4  name varchar2(20) unique ,
  5  email varchar2(40),
  6  constraint member_wang_id_pk primary key(id),
  7  constraint member_wang_email_uq unique(email)) ;

Table created.

SQL> commit ;

SQL> insert into member_wang(id , name , email)
  2  values ( 1001 , 'ad' , null) ;

1 row created.

SQL> commit ;

Commit complete.

SQL> select * from member_wang ;

        ID NAME                 EMAIL
---------- -------------------- ---------------------------------------
      1001 ad



SQL> insert into member_wang(id , name , email)
  2  values( 1002 , 'ben' , '123@123.com') ;

1 row created.

SQL> commit;

Commit complete.

SQL> select * from member_wang ;

        ID NAME                 EMAIL
---------- -------------------- ----------------------------------------
      1001 ad
      1002 ben                  123@123.com


***************错误编号为:ORA-00001相当重要啊   ！！！
SQL> insert into member_wang(id , name , email)
  2  values ( 1003 , 'peter' , '123@123.com') ;
insert into member_wang(id , name , email)
*
ERROR at line 1:
ORA-00001: unique constraint (TEST.MEMBER_WANG_EMAIL_UQ) violated


SQL> select constraint_name , constraint_type
  2  from user_constraints
  3  where table_name like 'MEMBER_WANG' ;

CONSTRAINT_NAME                C
------------------------------ -
MEMBER_WANG_ID_PK              P
SYS_C0015384                   U
MEMBER_WANG_EMAIL_UQ           U



***********************检查约束
 create table stu_wang(
 id number ,
 name varchar2(20) ,
 sex char ,
 score number(3) ,
 constraint stu_wang_id_pk primary key(id) ,
 constraint stu_wang_sex_ck check (sex in ('F' , 'M') ),
 constraint stu_wang_score_ck check (score>=0)   --->check后面必须要有括号将条件括起来!
 );


SQL> select constraint_name , constraint_type
  2  from user_constraints
  3  where table_name like 'STU_WANG' ;

CONSTRAINT_NAME                C
------------------------------ -
STU_WANG_SEX_CK                C
STU_WANG_SCORE_CK              C
STU_WANG_ID_PK                 P

SQL> insert into stu_wang(id , name , sex , score)
  2  values ( 101 , 'scott' , 'M' , 80) ;

1 row created.

SQL> commit ;

Commit complete.


*****************批量执行脚本
  SQL> @ D:\文件名.sql
  SQL> start D:\文件名.sql
但是文件必须和数据库在同一个机器上并操作系统一致.



****************************************************
SQL> create table snow
  2  as
  3  select * from  emp
  4  where 1=0 ;

Table created.

SQL> desc snow
 Name                                      Null?    Type
 ----------------------------------------- -------- ---------------------
 EMPNO                                     NOT NULL NUMBER(4)
 ENAME                                              VARCHAR2(10)
 JOB                                                VARCHAR2(9)
 MGR                                                NUMBER(4)
 HIREDATE                                           DATE
 SAL                                                NUMBER(7,2)
 DEPTNO                                             NUMBER(2)

SQL> select * from snow ;

no rows selected


----------------------------------------------------------------------------------------
SQL> create table snow1
  2  as
  3  select * from emp ;

Table created.

SQL> desc snow1 ;
 Name                                      Null?    Type
 ----------------------------------------- -------- ---------------------------------------
 EMPNO                                     NOT NULL NUMBER(4)
 ENAME                                              VARCHAR2(10)
 JOB                                                VARCHAR2(9)
 MGR                                                NUMBER(4)
 HIREDATE                                           DATE
 SAL                                                NUMBER(7,2)
 DEPTNO                                             NUMBER(2)

SQL> select * from snow1 ;

     EMPNO ENAME      JOB              MGR HIREDATE            SAL     DEPTNO
---------- ---------- --------- ---------- ------------ ---------- ----------
      7654 JIE        SALESMEN        7658                    1378         10
      9898 SCOTT                           16-MAY-10          2850         30
      7566 JONES      MANAGER         7839 02-APR-81          2222         20
      7698 BLAKE      MANAGER         7839 01-MAY-81          2850         30
      7782 CLARK      MANAGER         7839 09-JUN-81          2450         10
      7839 KING       PRESIDENT            17-NOV-81          5000         10
      7902 FORD       ANALYST         7566 03-DEC-81          3000         20

7 rows selected.
--------------------------------------------------------------------------------------------
SQL> create table snow3
  2  as
  3  select empno , sal , deptno
  4  from emp
  5  where mgr = 7566 ;

Table created.

SQL> commit ;

Commit complete.

SQL> desc snow3 ;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------
 EMPNO                                     NOT NULL NUMBER(4)
 SAL                                                NUMBER(7,2)
 DEPTNO                                             NUMBER(2)

SQL> select * from snow3 ;

     EMPNO        SAL     DEPTNO
---------- ---------- ----------
      7902       3000         20
------------------------------------------------------------------------------------------

SQL> create table snow4(id, name , salary)
  2  as
  3  select empno , ename , sal
  4  from emp
  5  where deptno = 30;

Table created.

SQL> desc snow4
 Name                                      Null?    Type
 ----------------------------------------- -------- --------------------
 ID                                        NOT NULL NUMBER(4)
 NAME                                               VARCHAR2(10)
 SALARY                                             NUMBER(7,2)



QL> select * from snow4 ;

       ID NAME           SALARY
--------- ---------- ----------
     9898 SCOTT            2850
     7698 BLAKE            2850
--------------------------------------------------------------------------------------------
**************删除数据但表结构保留着（务必谨慎操作）
SQL> truncate table snow4;

Table truncated.

SQL> select * from snow4;

no rows selected

SQL> desc snow4;
 Name                                      Null?    Type
 ----------------------------------------- -------- -----------------------
 ID                                        NOT NULL NUMBER(4)
 NAME                                               VARCHAR2(10)
 SALARY                                             NUMBER(7,2)
*****************删除整个表结构以及全部数据（务必谨慎操作）
SQL> drop table snow4;

Table dropped.

SQL> desc snow4;
ERROR:
ORA-04043: object snow4 does not exist
*******************************************修改表名
rename 表名 to 新表名
*******************************************一次性插入多条记录
SQL> insert into snow3(empno , sal , deptno)
  2  select empno , sal , deptno
  3  from emp
  4  where deptno = 10 ;

3 rows created.

SQL> commit ;

Commit complete.

SQL> select * from snow3 ;

     EMPNO        SAL     DEPTNO
---------- ---------- ----------
      7654       1378         10
      7782       2450         10
      7839       5000         10

SQL> insert into snow3(empno , sal , deptno)
  2  select empno , sal , deptno
  3  from emp
  4  where deptno = 20 ;

2 rows created.

SQL> commit ;

Commit complete.

SQL> select * from snow3;

     EMPNO        SAL     DEPTNO
---------- ---------- ----------
      7654       1378         10
      7782       2450         10
      7839       5000         10
      7566       2222         20
      7902       3000         20
************************************************一次更新多条记录
SQL> update snow5
  2  set sal = 7000 , deptno = 30
  3  where empno = 7654 ;

1 row updated.

SQL> commit ;

Commit complete.

SQL> select * from snow5;

     EMPNO        SAL     DEPTNO
---------- ---------- ----------
      7654       7000         30
      7782       2450         10
      7839       5000         10
      7566       2222         20
      7902       3000         20
************************************************savepoint
SQL> insert into mei
  2  values (1) ;

1 row created.

SQL> savepoint A;

Savepoint created.

SQL> insert into mei
  2  values (2) ;

1 row created.

SQL> savepoint B;

Savepoint created.

SQL> insert into mei
  2  values (3) ;

1 row created.

SQL> savepoint C;

Savepoint created.

SQL> rollback to B ;

Rollback complete.

SQL> select * from mei ;

        ID
----------
         0
         1
         2

SQL> rollback ;

Rollback complete.

SQL> select * from mei ;

        ID
----------
         0




************************************************************
SQL> show user ;
USER is "TEST"
SQL> select count(*) from user_tables ;

  COUNT(*)
----------
       495

SQL> select count(*) from all_tables ;

  COUNT(*)
----------
      2374

SQL> select user from dual ;

USER
------------------------------
TEST

SQL> select count(*) from dba_tables ;

  COUNT(*)
----------
      2374