回顾：
  文件操作 - 读写操作(read/write)、对比标C的函数和Uinx系统函数、文件描述符和文件表、文件描述符的复制dup/dup2、fcntl函数、文件锁

今天：
  文件锁不能锁定文件自身和读写函数，只能锁定对文件的加锁行为。因此，文件锁的使用必须和读写函数结合起来，读函数之前调用加读锁，写函数之前调用加写锁。读写完毕后，释放锁。
  加锁时，有两种方式，阻塞(F_SETLKW)和非阻塞(F_SETLK).cmd参数设置为F_SETLKW，如果锁加不上，会等待，直到锁能加上为止。

  cmd是F_GETLK时，不是加锁也不是取锁，是测试一个锁能不能加上。如果能加，只改变锁的类型为F_UNLCK；如果不能加，会把当前正在使用的锁的信息放入lock参数中带出来，并且l_pid也会被改成加锁的进程ID。因此：可以使用l_pid是否等于-1判断锁能否加上。

 UC文件的其他函数
  标C取文件大小的代码：fseek(SEEK_END);ftell
  stat()取文件的相关属性，包括大小、修改时间等。(效果等同于ls -l查看文件)
  access() 可以获取文件的权限和判断文件是否存在。
  chmod()可以修改文件权限
  truncate()可以设置文件的大小
  umask()可以设置新的权限屏蔽字
   权限屏蔽字就是 系统为了安全，会自动屏蔽一些权限。
   umask在使用时，先把新的屏蔽字放入，再返回旧的屏蔽字，使用完毕后，再把旧的屏蔽字还原。

  remove和unlink都可以删除文件,其本质不是删除数据，而是删除一个硬链接，当硬链接数到0时，文件会被删除(只是找不到文件，数据不会被删除)。

   mmap/munmap 虚拟内存地址映射文件
   目录相关函数:
    mkdir - 新建目录 
    rmdir - 删除 空目录
    chdir - 切换当前目录(cd)
    getcwd - 取得当前的目录(pwd)但不打印
    获取目录的子文件和子目录：
     1 DIR* opendir("目录名") 打开目录
     2 循环readdir(DIR*)，循环读取一个目录子项，读到NULL结束。
  
   练习&作业： 递归打印目录的内容，要求子目录的内存也要打印出来，代码：
    void print(char* path){
      //练习填写函数代码      
    }
    int main(){
      print("../day01");
    }
   思路：首先读取目录的子项，如果子项是文件，打印即可，如果子项是目录，打印后 递归调用print函数打印子目录。
    提示：用d_type 是否 等于4 判断是目录还是文件。






